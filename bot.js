const { Client, MessageFlags } = require("discord.js-selfbot-v13")
const { evaluate } = require("mathjs")
const { red, green, yellow, blue, magenta, cyan, white, grey } = require('kleur/colors')
const config = require('./config.json')
let prefix = config.prefix
const version = '1.4'
const name = 'Midnight'
let latestCommand;
let globalChannel = ''
let trollOn = false
let whitelistedPeople = require('./whitelist.json')

let purgeHackText = '‎'

for(let i = 0; i < 200; i++) {
    purgeHackText += '  \n'
}
purgeHackText += '‎'

if(config.token == 'YOURTOKEN') {
    exit('Please set your token, then relaunch the .bat file.')
}
const client = new Client()

const asciiArt = `
    ███╗   ███╗██╗██████╗ ███╗   ██╗██╗ ██████╗ ██╗  ██╗████████╗
    ████╗ ████║██║██╔══██╗████╗  ██║██║██╔════╝ ██║  ██║╚══██╔══╝
    ██╔████╔██║██║██║  ██║██╔██╗ ██║██║██║  ███╗███████║   ██║   
    ██║╚██╔╝██║██║██║  ██║██║╚██╗██║██║██║   ██║██╔══██║   ██║   
    ██║ ╚═╝ ██║██║██████╔╝██║ ╚████║██║╚██████╔╝██║  ██║   ██║   
    ╚═╝     ╚═╝╚═╝╚═════╝ ╚═╝  ╚═══╝╚═╝ ╚═════╝ ╚═╝  ╚═╝   ╚═╝   `
console.log('')
console.log(cyan(asciiArt))
console.log('')

const helpMsg = `\`\`\`ini\n
[${name} v${version}] -- [Prefix: ${prefix}]\n
[credits] Shows the credits for ${name}
[info] Shows info about the bot
[help] Shows the help message
[help <command>] Shows arguments for the command\n
[fun] Lists fun commands
[utility] Lists utility commands
[abusive] Lists abusive commands
\`\`\``

const funHelp = `\`\`\`ini
[embedmsg <message>] Sends an embed message generated by embed.rauf.wtf
[gfgen] Links the github repository for 'GFGenerator' by Ozzy
[aboutme] Gives you some info about yourself
[setchannel] Let other people use commands in the channel you run it in
[removechannel] Disable commands for others
[fee on] Enables fee (could be risky)
[fee off] Disables fee
[fee whitelist <userid>] Whitelist a person by their id (disables the fee for them)
[fee blacklist <userid>] Removes person from the whitelist by their id
\`\`\``

const utilityHelp = `\`\`\`ini
[eval/calc/calculate <expression>] Calculate expression
[darkmode] Dark mode
[lightmode] Pain/Light mode
[colors] Lists (most) colors in discord
[setlayout <compact|normal>] Sets your discord layout
[setstatus <online|idle|dnd|invisible> <{emoji}|null> <status/bio>] Set your status
[repeat] Repeats the last command you did (excluding -repeat obviously)
[prefix] Sets your ${name} prefix.
\`\`\``

const abusiveHelp = `\`\`\`ini
[purgehack] Practically purges messages.
\`\`\``

client.on('ready', async () => {
    console.log(`${green('Connected')}\nLogged in as: ${client.user.tag} [${yellow(`${client.guilds.cache.size} Servers`)}]`)
    console.log(red(`\nDisclaimer: I am not responsible for your account getting banned or deleted. You are responsible for what happens to\nyour account.`))
    console.log(cyan(`\n${prefix}help to get started.`))
    whitelistedPeople = [client.user.id]
})

client.on('message', async (msg) => {
    if(msg.channel.type == 'DM') {
        let dontSend = false
        if(msg.author == client.user) {dontSend = true}
        if (!trollOn) {dontSend = true}
        for(let usr of whitelistedPeople) {
            if(usr == msg.author.id) {
                dontSend = true
            }
        }
        if(dontSend == false) {
            msg.channel.send(`**Thank you for contacting** \`${client.user.tag}\`**. It apears you have not paid my DM fee yet.**\n> I will not recieve nor read any of your messages until this is paid.`)
        }
    }

    if(!msg.content.startsWith(prefix)) return
    if(msg.author !== client.user && msg.channel.id !== globalChannel) return

    let args = msg.content.slice(prefix.length).trim().split(' ')
    let command = args.shift().toLowerCase()

    if(command != 'repeat') {
        latestCommand = msg.content
    }

    if(command == 'help' && !args[0]) {
        msg.channel.send(helpMsg)
    } else if(command == 'eval' || command == 'calc' || command == 'calculate') {
        strArgs = args.join('')
        evaledStr = String(evaluate(strArgs))
        msg.channel.send('```\n'+evaledStr+'\n```')
    } else if(command == 'credits') {
        msg.channel.send('```ini\n[Ozzy] Made the bot\n```')
    } else if(command == 'lightmode') {
        if(msg.author !== client.user) {permDenied(msg); return}
        client.setting.setTheme('light')
        if(msg.author !== client.user) {permDenied(msg); return}
    } else if(command == 'darkmode') {
        client.setting.setTheme('dark')
    } else if(command == 'colors') {
        msg.channel.send('```ini\n[Yellow] fix\n[Orange] arm\n[Cyan] yaml\n[# Blue] md\n[Grey]\n[- Red] diff\n[+ Yellowish Green] diff\n```')
    } else if(command == 'embedmsg') {
        if(msg.author !== client.user) {permDenied(msg); return}
        mes = args.join('+')
        msg.channel.send(` ||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​||||​|https://embed.rauf.workers.dev/?author=${mes}&color=317DC2`)
        msg.delete()
    } else if(command == 'gfgen') {
        msg.channel.send('https://github.com/OzzyAndShadow/GFGenerator')
    } else if(command == 'setlayout') {
        if(args[0].toLowerCase() == 'compact') {
            client.setting.setDisplayCompactMode(true)
        } else if(args[0].toLowerCase() == 'normal') {
            client.setting.setDisplayCompactMode(false)
        }
    } else if(command == 'setstatus') {
        if(msg.author !== client.user) {permDenied(msg); return}
        let sta = args.shift()
        let emoj = args.shift()
        client.setting.setCustomStatus({
            status: sta,
            emoji: emoj,
            text: args.join(' '),
            expires: null
        })
    } else if(command == 'info') {
        msg.channel.send('```ini\n['+name+'] Self Bot [v'+version+']\n```')
    } else if(command == 'purgehack') {
        if(msg.author !== client.user) {permDenied(msg); return}
        msg.delete()
        msg.channel.send(purgeHackText)
    } else if(command == 'fun') {
        msg.channel.send(funHelp)
    } else if(command == 'utility') {
        msg.channel.send(utilityHelp)
    } else if(command == 'abusive') {
        msg.channel.send(abusiveHelp)
    } else if(command == 'repeat') {
        msg.delete()
        msg.channel.send(latestCommand)
    } else if(command == 'aboutme') {
        msg.channel.send(`\`\`\`ini
[Tag] ${msg.author.tag}
[Id] ${msg.author.id}
[Join Date] ${String(msg.author.createdAt).split(' ').slice(0,4).join(' ')}
[Servers] In ${client.guilds.cache.size} servers
\`\`\``)
    } else if(command == 'prefix') {
        if(msg.author !== client.user) {permDenied(msg); return}
        p = args[0]
        newjson = {
            "token": config.token,
            "prefix": p
        }
        require('fs').writeFile('config.json', JSON.stringify(newjson), (error) => {
            if (error) {
                throw error;
            }
        });
        prefix = p
        msg.channel.send(`\`\`\`ini
[Prefix] set to [${prefix}]
\`\`\``)
    } else if(command == 'setchannel') {
        if(msg.author !== client.user) {permDenied(msg); return}
        globalChannel = msg.channel.id
        msg.channel.send(`\`\`\`ini
[Channel] set to [${globalChannel}]
Other people can now do commands in this channel.
\`\`\``)
    } else if(command == 'removechannel') {
        if(msg.author !== client.user) {permDenied(msg); return}
        globalChannel = ''
        msg.channel.send(`\`\`\`ini
[Channel] removed.
People can no longer do commands in this channel.
\`\`\``)
    } else if(command == 'fee') {
        if(args[0] == 'on') {
            msg.channel.send('```diff\n+ Fee enabled\n```')
            trollOn = true
        } else if(args[0] == 'off') {
            msg.channel.send('```diff\n- Fee disabled\n```')
            trollOn = false
        } else if(args[0] == 'whitelist') {
            msg.channel.send(`\`\`\`diff\n+ Whitelisted ${args[1]}\n\`\`\``)
            whitelistedPeople.push(args[1])
            require('fs').writeFile('whitelist.json', JSON.stringify(whitelistedPeople), (error) => {
                if (error) {
                    throw error;
                }
            });
        } else if(args[0] == 'blacklist') {
            msg.channel.send(`\`\`\`diff\n- Blacklisted ${args[1]}\n\`\`\``)
            let index = whitelistedPeople.indexOf(args[1])
            if(index > -1) {
                whitelistedPeople.splice(index,1)
            }
            require('fs').writeFile('whitelist.json', JSON.stringify(whitelistedPeople), (error) => {
                if (error) {
                    throw error;
                }
            })
        }
    } else if(command == 'help') {
        let cmd = `[${args[0].toLowerCase().trim()}`
        const hh = helpMsg.split('\n')
        const fh = funHelp.split('\n')
        const uh = utilityHelp.split('\n')
        const ah = abusiveHelp.split('\n')
        let com = ''

        for(const ln of hh) {
            if(ln.startsWith(cmd)) {
                com += `${ln}\n`
            }
        }

        for(const ln of fh) {
            if(ln.startsWith(cmd)) {
                com += `${ln}\n`
            }
        }

        for(const ln of uh) {
            if(ln.startsWith(cmd)) {
                com += `${ln}\n`
            }
        }

        for(const ln of ah) {
            if(ln.startsWith(cmd)) {
                com += `${ln}\n`
            }
        }
        
        if(com !== '') {
            msg.channel.send(`\`\`\`ini\n${com}\n\`\`\``)
        } else {
            msg.channel.send('```diff\n- Error: command not found\n```')
        }
    }
})

client.login(config.token)

function exit( status ) {
    // http://kevin.vanzonneveld.net
    // +   original by: Brett Zamir (http://brettz9.blogspot.com)
    // +      input by: Paul
    // +   bugfixed by: Hyam Singer (http://www.impact-computing.com/)
    // +   improved by: Philip Peterson
    // +   bugfixed by: Brett Zamir (http://brettz9.blogspot.com)
    // %        note 1: Should be considered expirimental. Please comment on this function.
    // *     example 1: exit();
    // *     returns 1: null

    var i;

    if (typeof status === 'string') {
        console.log(red(status));
    }

    function stopPropagation (e) {
        e.stopPropagation();
        // e.preventDefault(); // Stop for the form controls, etc., too?
    }

    throw new Error();
}

function permDenied(msg) {
    msg.channel.send(`\`\`\`diff
- You do not have permission to execute that command.
\`\`\``)
}